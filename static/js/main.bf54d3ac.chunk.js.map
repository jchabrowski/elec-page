{"version":3,"sources":["components/about.jsx","components/contact.jsx","components/features.jsx","components/header.jsx","components/navigation.jsx","components/services.jsx","components/wrapper.jsx","App.jsx","serviceWorker.js","index.js"],"names":["About","props","id","className","src","alt","data","paragraph","Why","map","d","i","Why2","Contact","Features","icon","title","text","Header","href","learnMore","Navigation","type","data-toggle","data-target","Services","Wrapper","children","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","style","border","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bf54d3ac.chunk.js","sourcesContent":["export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {' '}\n            <img\n              src=\"img/electrician.jpg\"\n              className=\"img-responsive\"\n              alt=\"\"\n            />{' '}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>O mnie</h2>\n              <p>{props.data ? props.data.paragraph : 'loading...'}</p>\n\n              <p className=\"phone\">+48 xxx xxx xxx</p>\n\n              <h3>Dlaczego możesz mi zaufać?</h3>\n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Contact = () => {\n  return (\n    <div>\n      <div id=\"contact\">\n        <div className=\"container\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"section-title\">\n                <h2>Skontaktuj się ze mną</h2>\n                <p className=\"contact-me\">\n                  Przedstaw swój problem, znajdziemy rozwiązanie\n                </p>\n                <p className=\"phone-number\">+48 xxx xxx xxx</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Features = (props) => {\n  return (\n    <div id=\"features\" className=\"text-center\">\n      <div className=\"container d-flex flex-col\">\n        <div>\n          <h2>W czym Ci pomogę</h2>\n        </div>\n        <div className=\" d-flex justify-content-center\">\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className=\"col-md-4\">\n                  {' '}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const Header = (props) => {\n  return (\n    <header id=\"header\">\n      <div className=\"intro\">\n        <div className=\"overlay\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 col-md-offset-2 intro-text\">\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href=\"#about\"\n                  className=\"btn btn-custom btn-lg page-scroll\"\n                >\n                  {props.data ? props.data.learnMore : 'Loading'}\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","export const Navigation = (props) => {\n  return (\n    <nav id=\"menu\" className=\"navbar navbar-default navbar-fixed-top\">\n      <div className=\"container\">\n        <div className=\"navbar-header\">\n          <button\n            type=\"button\"\n            className=\"navbar-toggle collapsed\"\n            data-toggle=\"collapse\"\n            data-target=\"#bs-example-navbar-collapse-1\"\n          >\n            {' '}\n            <span className=\"sr-only\">Toggle navigation</span>{' '}\n            <span className=\"icon-bar\"></span>{' '}\n            <span className=\"icon-bar\"></span>{' '}\n            <span className=\"icon-bar\"></span>{' '}\n          </button>\n          <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\n            Elektryk Bogusław\n          </a>{' '}\n        </div>\n\n        <div\n          className=\"collapse navbar-collapse\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li>\n              <a href=\"#features\" className=\"page-scroll\">\n                Zlecenia\n              </a>\n            </li>\n            <li>\n              <a href=\"#about\" className=\"page-scroll\">\n                O mnie\n              </a>\n            </li>\n            <li>\n              <a href=\"#services\" className=\"page-scroll\">\n                Usługi\n              </a>\n            </li>\n            <li>\n              <a href=\"#contact\" className=\"page-scroll\">\n                Kontakt\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","export const Services = (props) => {\n  return (\n    <div id=\"services\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Usługi</h2>\n          <p className=\"what-i-do\">Na codzień wykonuję:</p>\n          <div className=\"list-style\">\n            <div className=\"col-lg-4 col-sm-4 col-xs-12\">\n              <ul>\n                {props.data\n                  ? props.data.Why.map((d, i) => <li key={`${d}-${i}`}>{d}</li>)\n                  : 'loading'}\n              </ul>\n            </div>\n\n            <div className=\"col-lg-4 col-sm-4 col-xs-12\">\n              <ul>\n                {props.data\n                  ? props.data.Why2.map((d, i) => (\n                      <li key={`${d}-${i}`}> {d}</li>\n                    ))\n                  : 'loading'}\n              </ul>\n            </div>\n\n            <div className=\"col-lg-4 col-sm-4 col-xs-12\">\n              <ul>\n                {props.data\n                  ? props.data.Why.map((d, i) => (\n                      <li key={`${d}-${i}`}> {d}</li>\n                    ))\n                  : 'loading'}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const Wrapper = ({ children }) => {\r\n  return <div id=\"wrapper\">{children}</div>;\r\n};\r\n","import { useEffect, useState } from 'react';\nimport SmoothScroll from 'smooth-scroll';\nimport './App.css';\nimport { About } from './components/about';\nimport { Contact } from './components/contact';\nimport { Features } from './components/features';\nimport { Header } from './components/header';\nimport { Navigation } from './components/navigation';\nimport { Services } from './components/services';\nimport { Wrapper } from './components/wrapper';\nimport JsonData from './data/data.json';\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <Wrapper style={{ border: '1px solid red' }}>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      <About data={landingPageData.About} />\n      <Services data={landingPageData.About} />\n      <Contact data={landingPageData.Contact} />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}